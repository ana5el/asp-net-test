// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220215112251_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Backend.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("article");
                });

            modelBuilder.Entity("Backend.Models.DetailsReception", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<double>("PrixHt")
                        .HasColumnType("float");

                    b.Property<int>("Qte")
                        .HasColumnType("int");

                    b.Property<int?>("ReceptionId")
                        .HasColumnType("int");

                    b.Property<double>("TVA")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("ReceptionId");

                    b.ToTable("DetailsReception");
                });

            modelBuilder.Entity("Backend.Models.Fournisseur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("fournisseur");
                });

            modelBuilder.Entity("Backend.Models.Reception", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("HT")
                        .HasColumnType("float");

                    b.Property<double>("TTC")
                        .HasColumnType("float");

                    b.Property<double>("TVA")
                        .HasColumnType("float");

                    b.Property<DateTime>("dateReception")
                        .HasColumnType("datetime2");

                    b.Property<int>("idFournisseur")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("idFournisseur");

                    b.ToTable("reception");
                });

            modelBuilder.Entity("Backend.Models.DetailsReception", b =>
                {
                    b.HasOne("Backend.Models.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Reception", null)
                        .WithMany("details")
                        .HasForeignKey("ReceptionId");

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Backend.Models.Reception", b =>
                {
                    b.HasOne("Backend.Models.Fournisseur", "Fournisseur")
                        .WithMany()
                        .HasForeignKey("idFournisseur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fournisseur");
                });

            modelBuilder.Entity("Backend.Models.Reception", b =>
                {
                    b.Navigation("details");
                });
#pragma warning restore 612, 618
        }
    }
}
